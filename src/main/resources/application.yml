spring:
  application:
    name: server

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: false

  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB

  ai:
    openai:
      api-key: ${OPEN_AI_KEY}
      chat:
        options:
          model: gpt-4o
          temperature: 0.5

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

image-dir:
  news-article: ${NEWS_ARTICLE_IMAGE_DIR}
  plogging-event: ${PLOGGING_EVENT_IMAGE_DIR}
  plogging-meetup: ${PLOGGING_MEETUP_IMAGE_DIR}
  crew: ${CREW_IMAGE_DIR}

cors-allow-url:
  front: ${FRONT_URL}

jwt:
  secret: ${JWT_SECRET}
  validity-in-seconds: ${VALIDITY_IN_SECONDS}
  validity-in-seconds-refresh: ${VALIDITY_IN_SECONDS_REFRESH}

server:
  forward-headers-strategy: native
